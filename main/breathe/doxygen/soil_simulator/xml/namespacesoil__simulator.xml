<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacesoil__simulator" kind="namespace" language="C++">
    <compoundname>soil_simulator</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="soil__evolution_8hpp_1a3f5b0d4194a5c9e074306089e81c71ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void soil_simulator::SoilEvolution</definition>
        <argsstring>(bool set_rng, bool random_trajectory, bool logging, bool check_outputs, bool write_outputs)</argsstring>
        <name>SoilEvolution</name>
        <param>
          <type>bool</type>
          <declname>set_rng</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>random_trajectory</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logging</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check_outputs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write_outputs</declname>
        </param>
        <briefdescription>
<para>This function provides an example script to run the simulator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>set_rng</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the RNG seed is set or not. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>random_trajectory</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the default trajectory or a randomized one is used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logging</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether logging information are provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check_outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether to run simulation outputs check at every step. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_outputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the simulation outputs are written into files at every step.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This example script simulates a bucket performing a simple digging scoop in the XZ plane following a parabolic trajectory. There is an option to randomize the parabolic trajectory by selecting the initial position (<computeroutput>x_i</computeroutput>, <computeroutput>z_i</computeroutput>) of the bucket and the deepest point of the scoop (<computeroutput>x_min</computeroutput>, <computeroutput>z_min</computeroutput>) wihtin reasonable ranges.</para>
<para>Note that the parabolic trajectory assumes that the orientation of the bucket follows the gradient of the trajectory. While it may not be fully accurate, it provides a good approximation for testing the simulator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/soil_dynamics_cpp/soil_dynamics_cpp/test/example/soil_evolution.hpp" line="23" column="6" bodyfile="/home/runner/work/soil_dynamics_cpp/soil_dynamics_cpp/test/example/soil_evolution.cpp" bodystart="30" bodyend="312" declfile="/home/runner/work/soil_dynamics_cpp/soil_dynamics_cpp/test/example/soil_evolution.hpp" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="soil__evolution_8hpp_1aa35555d66b277c532fedcee36e34a40d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; std::vector&lt; std::vector&lt; float &gt; &gt;, std::vector&lt; std::vector&lt; float &gt; &gt;&gt;</type>
        <definition>std::tuple&lt; std::vector&lt;std::vector&lt;float&gt; &gt;, std::vector&lt;std::vector&lt;float&gt; &gt;&gt; soil_simulator::CalcTrajectory</definition>
        <argsstring>(float x_i, float z_i, float x_min, float z_min, float origin_angle, int nn)</argsstring>
        <name>CalcTrajectory</name>
        <param>
          <type>float</type>
          <declname>x_i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z_i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z_min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>origin_angle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nn</declname>
        </param>
        <briefdescription>
<para>This function calculates a parabolic trajectory given the starting position (<computeroutput>x_i</computeroutput>, <computeroutput>z_i</computeroutput>) and the deepest position (<computeroutput>x_min</computeroutput>, <computeroutput>z_min</computeroutput>) of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x_i</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate of the starting position of the trajectory. [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z_i</parametername>
</parameternamelist>
<parameterdescription>
<para>Z coordinate of the starting position of the trajectory. [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_min</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate of the deepest position of the trajectory. [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Z coordinate of the deepest position of the trajectory. [m] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>origin_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle to the horizontal plane of the bucket in its reference pose. [rad] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nn</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of increments in the trajectory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tuple composed of a vector aggregating the position of the bucket with time in meter, and a vector aggregating the orientation of the bucket with time following the quaternion convention. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/soil_dynamics_cpp/soil_dynamics_cpp/test/example/soil_evolution.hpp" line="44" column="2" declfile="/home/runner/work/soil_dynamics_cpp/soil_dynamics_cpp/test/example/soil_evolution.hpp" declline="44" declcolumn="2"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/soil_dynamics_cpp/soil_dynamics_cpp/test/example/soil_evolution.hpp" line="11" column="1"/>
  </compounddef>
</doxygen>
