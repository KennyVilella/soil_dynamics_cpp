name: CI

# Trigger CI for pull requests to the main branch or when a release is made
# Do not trigger CI for draft pull request
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:  
    types: [opened, synchronize, reopened, ready_for_review]


jobs:
  build:
    name: Build || C++ - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install cpplint
        run: pip install cpplint

      - name: Run cpplint on the source files
        run: |
          cd src
          cpplint *
          cd ..

      - name: Run cpplint on the unit test files
        run: |
          cd test/unit_tests/
          cpplint --filter=-'build/include',-'readability/fn_size' *
          cd ../..

      - name: Run cpplint on the benchmark files
        run: |
          cd test/benchmarks/
          cpplint --filter=-'runtime/references' *
          cd ../..

      - name: Install Google test
        run: |
          sudo apt-get install libgtest-dev
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make

      - name: Build the simulator
        run: |
          cmake -S . -B build
          cmake --build build --target soil_dynamics

      - name: Build the unit tests
        run: |
          cmake -S . -B build
          cmake --build build --target unit_tests

      - name: Build the benchmark functions
        run: |
          cmake -S . -B build
          cmake --build build --target benchmarks

      - name: Install Valgrind
        run: sudo apt-get install valgrind

      - name: Run valgrind on the simulator
        run: valgrind --leak-check=yes --error-exitcode=1 ./build/src/soil_dynamics
        shell: bash

      - name: Run valgrind on the unit tests
        run: valgrind --leak-check=yes --error-exitcode=1 ./build/test/unit_tests/unit_tests
        shell: bash

      - name: Run valgrind on the benchmark functions
        run: valgrind --leak-check=yes --error-exitcode=1 ./build/test/benchmarks/benchmarks
        shell: bash
  tests:
    name: Unit tests || C++ - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Google test
        run: |
          sudo apt-get install libgtest-dev
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make

      - name: Build the unit test
        run: |
          cmake -S . -B build
          cmake --build build --target unit_tests

      - name: Run the unit test
        run: ./build/test/unit_tests/unit_tests
  doc:
    name: Doc deployment || C++ - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Get all git tags
        run: git fetch --all

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: Install the documentation dependencies
        run: python -m pip install sphinx sphinx-multiversion sphinx_rtd_theme breathe

      - name: Install Doxygen
        run: sudo apt-get install doxygen

      - name: Build the documentation
        run: sphinx-multiversion docs docs/build/html

      - name: Created index redirection
        run: cp docs/_asset/index.html docs/build/html

      - name: Deploy the documentation
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          folder: ./docs/build/html
